openapi: 3.0.3
info:
  version: '1.0.0'
  title: Users management
tags:
  - name: todo
    description: Todos management

paths:
  /api/todos:
    get:
      summary: Get list of todos
      operationId: getAllTodos
      tags:
        - todo
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int31
            minimum: 1
            default: 1
        - in: query
          name: size
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 20
      responses:
        200:
          description: List of todos owned by the authenticated user
          content:
            application/json:
              schema:
                type: object
                properties:
                  todos:
                    type: array
                    items:
                      $ref: '#/components/schemas/FullTodo'
                  total:
                    type: integer
                    example: 10
                  page:
                    type: integer
                    example: 1
                required:
                  - total
                  - page
                  - todos

    post:
      summary: Create new todo
      operationId: createTodo
      tags:
        - todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 'lorem ipsum'
              required:
                - content
      responses:
        201:
          description: Todo created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTodo'
  /api/todos/{id}:
    get:
      summary: Get single todo by id
      operationId: getTodo
      tags:
        - todo
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: "Todo id"
      responses:
        200:
          description: 'Todo by id returned successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTodo'
    put:
      summary: Update a todo (full update)
      operationId: updateTodo
      tags:
        - todo
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: "Todo id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
              required:
                - content
                - status
      responses:
        200:
          description: 'todo content updated successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
    delete:
      summary: Delete a todo by id
      operationId: deleteTodo
      tags:
        - todo
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: "Todo id"
      responses:
        204:
          description: 'Todo removed successfully'
components:
  schemas:
    Todo:
      type: object
      properties:
        content:
          type: string
          example: 'lorem ipsum'
        status:
          type: string
          enum: [ 'PENDING', 'DONE' ]
          example: 'PENDING'
      required:
        - content
        - status
    FullTodo:
      allOf:
        - $ref: '#/components/schemas/Todo'
      properties:
        id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - updated_at
        - created_at