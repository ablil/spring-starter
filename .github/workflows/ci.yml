name: continuous integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# define access for GITHUB_TOKEN secret
permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: ./gradlew build
      - name: Archive build reports
        uses: actions/upload-artifact@v3
        with:
          path: build/reports

      - name: Cache build directory
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}

  push-to-ghcr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - name: Restore build directory from cache
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: login to ghcr
        run: docker login ghcr.io -u USERNAME -p ${{ secrets.GITHUB_TOKEN }}
      - name: build docker image
        run: ./gradlew jibDockerBuild
      - name: push docker image (latest)
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag spring-starter:latest ghcr.io/ablil/spring-starter:latest
          docker push ghcr.io/ablil/spring-starter:latest
      - name: push docker image
        if: github.ref != 'refs/heads/main'
        run: |
          export SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          docker tag spring-starter:latest ghcr.io/ablil/spring-starter:$SHORT_SHA
          docker push ghcr.io/ablil/spring-starter:$SHORT_SHA
